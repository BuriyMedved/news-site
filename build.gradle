buildscript {
    repositories {
        mavenCentral()
    }

//    dependencies {
//        classpath "org.springframework.boot:spring-boot-gradle-plugin:3.1.5"
//        classpath("com.vaadin:vaadin-gradle-plugin:24.4.12")
//        classpath("io.spring.gradle:dependency-management-plugin:1.0.15.RELEASE")
//        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.22'
//        classpath 'org.jetbrains.kotlin:kotlin-noarg:1.9.22'
//        classpath 'org.jetbrains.kotlin:kotlin-allopen:1.9.22'
//    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'com.vaadin'
    id 'io.spring.dependency-management' version '1.1.7'
    id("org.jetbrains.kotlin.jvm") version "2.1.10"
//    id 'kotlin'
    id("org.jetbrains.kotlin.plugin.jpa") version "2.1.10"
    id("org.jetbrains.kotlin.plugin.spring") version "2.1.10"
    id("org.jetbrains.kotlin.plugin.allopen") version "2.1.10"
}

java {
	targetCompatibility = 20
	sourceCompatibility = 20
}

kotlin {
    jvmToolchain(20)
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}

//configurations {
//	developmentOnly
//	runtimeClasspath {
//		extendsFrom developmentOnly
//	}
//}

String myBranch=project.hasProperty("branch-name")?project.property("branch-name") : null
if (myBranch == null) {
    myBranch = "local"
}
String myReleasePath = '../../Release_'+myBranch+'/' + project.name

task createRelease(description: 'Копирует в Release ', group: 'release') {
    dependsOn bootJar
    doLast {
        delete(myReleasePath)

//        copy {
//            from { project.configurations.getByName("developmentOnly").files }
//            include "*.zip"
//            into (myReleasePath)
//        }


        copy {
            from { "profiles/platform-all-platforms" }
            into (myReleasePath)
        }

        def installPath = myReleasePath + "/install"

        copy {
            from {
                zipTree("$installPath/soft/openjdk-20.0.2_windows-x64_bin.zip")
            }

            into installPath + "/soft"
        }

        delete "$installPath/soft/openjdk-20.0.2_windows-x64_bin.zip"

        copy {
            from bootJar.archivePath
            into installPath
        }
    }
}

