server:
  port: 8080


spring:
  cloud:
    gateway:
      routes:
        - id: bff
          uri: http://localhost:9080
          predicates:
            - Path=/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
            - TokenRelay=
            - SaveSession
#            - StripPrefix=1
#  main:
#    web-application-type: reactive
  profiles:
#    active: noSecurity
    active: prod
#  websecurity:
#    debug: true
  security:
    oauth2:
      client:
        registration:
          articles-client-oidc:
            provider: spring
            client-id: articles-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8080/login/oauth2/code/{registrationId}"
            scope: articles.read, openid
            client-name:  articles-client-oidc
          articles-client-authorization-code:
            provider: spring
            client-id: articles-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8080/authorized"
            scope: articles.read, openid
            client-name: articles-client-authorization-code
        provider:
          spring:
            issuer-uri: http://127.0.0.2:9000

